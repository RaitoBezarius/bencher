---
import PerfLayout from "./PerfLayout.astro";
import Tetris from "../../components/site/Tetris.astro";
import { fetchSSR, PubResource } from "../../components/perf/util";
import * as Sentry from "@sentry/astro";
import PublicDeck, {
	type PubDeckPanelConfig,
} from "../../components/perf/PublicDeck";

// Using `meta.env` requires `prerender = false`
const BENCHER_API_URL = import.meta.env.BENCHER_API_URL;
const INTERNAL_API_URL = import.meta.env.INTERNAL_API_URL;

interface Props {
	title: (json?: undefined | object) => string;
	titleFmt?: (title: string) => string;
	description: (json?: undefined | object) => string;
	created: (json?: undefined | object) => string;
	modified: (json?: undefined | object) => string;
	config: PubDeckPanelConfig;
}

const params = Astro.params;
const search = Object.fromEntries(Astro.url.searchParams);
const config = Astro.props.config;
let title = Astro.props.title();
let description = Astro.props.description();
let notFound = false;
let json: object;
if (params.project && params.project !== "undefined") {
	try {
		const url = `${INTERNAL_API_URL ?? BENCHER_API_URL}${config?.deck?.url(
			params,
			search,
		)}`;
		const resp = await fetchSSR(url);
		json = await resp.json();
		if (json?.uuid) {
			title = Astro.props.title(json);
			description = Astro.props.description(json);
		} else {
			title = "Not Found";
			description = "Resource not found";
			notFound = true;
		}
	} catch (e) {
		console.error(`Failed to fetch resource data: ${e}`);
		Sentry.captureException(e);
	}
}
---

<PerfLayout
  title={title}
  titleFmt={Astro.props.titleFmt}
  description={description}
  published={Astro.props.created(json)}
  modified={Astro.props.modified(json)}
>
  { notFound ?
  <section class="section">
    <div class="container">
      <div class="columns is-mobile">
        <div class="column">
          <h1 class="title is-1">Not Found</h1>
          <hr />
          <p>Could not find resource <code>{params[PubResource.param(config?.resource)]}</code> for Project <code>{params.project}</code></p>
          <p>The Project may be private or the resource may not exist.</p>
          <br />
          <a class="button" href={`/perf/${params.project}`}>Go to Project</a>
        </div>
        <div class="column">
          <Tetris />
        </div>
      </div>
    </div>
  </section>
  :
  <PublicDeck
    client:only="solid-js"
    apiUrl={BENCHER_API_URL}
    params={params}
    config={config}
    data={json}
  />
  }
</PerfLayout>
